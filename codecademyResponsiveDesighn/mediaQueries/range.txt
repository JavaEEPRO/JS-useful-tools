

//If anyone asks you, 'Why are you untying it?' say to him: 'The Lord needs it. (Luke 19:31)

---------------------------------------------style.css------------------------------------------------------------------------
html,
body {
  max-width: 1200px;
  margin: auto;
  font-family: "Space Mono", sans-serif;
  font-size: 18px;
  line-height: 1.4em;
  color: GhostWhite;
}

body {
  background-image: url("../img/space.jpg");
  height: 100%;
  background-attachment: fixed;
  background-size: cover;
}

.clearfix {
  clear: both;
}

/* Title and Description */

.page-title {
  text-align: center;
  margin: auto;
  line-height: 2em;
}

.logo {
  height: 80px;
  width: 80px;
  background-image: url("../img/spaceship.png");
  background-size: contain;
  background-repeat: no-repeat;
  display: inline-block;
  position: relative;
  top: 1em;
}

.page-title h1 {
  display: inline-block;
}

.main {
  text-align: center;
}

.page-description {
  font-size: 0.8rem;
  padding: 30px;
}

.learn-more {
  color: DarkOrange;
  text-decoration: none;
  display: block;
  margin: 25px 0 0 0;
  font-weight: bold;
}

/* Gallery */

.gallery {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 20px;
}

.gallery-item {
  margin: 20px;
}

.gallery-item .thumbnail {
  width: 240px;
  border: 2px solid GhostWhite;
  border-radius: 4px;
}

/* Footer Navigation */

nav {
  margin-top: 30px;
}

nav ul {
  display: block;
}

nav li {
  display: inline;
  margin: 0 20px 0 0;
  color: GhostWhite;
}

nav a {
  line-height: 60px;
  border: 1px solid GhostWhite;
  padding: 7px;
  border-radius: 4px;
  color: DarkOrange;
  text-decoration: none;
}

.contact-btn {
  cursor: pointer;
  margin: 20px 30px;
  text-align: center;
}

.contact-btn a:active {
  position: relative;
  bottom: 2px;
}

@media only screen and (max-width: 480px) {
  .page-title{
    width:270px;
  }
}

@media only screen and (min-width:320px) and (max-width:480px){
  .gallery-item .thumbnail {
    width:95%;
  }
}

------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------index.html-------------------------------------------------------------------
<html>

<head>
  <title>Amazing Space</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" type="text/css" href="css/reset.css">
  <link rel="stylesheet" type="text/css" href="css/style.css">
  <link href="https://fonts.googleapis.com/css?family=Space+Mono:400,700" rel="stylesheet">
</head>

<body>
  <header>
    <div class="page-title">
      <div class="logo"></div>
      <h1>Amazing Space</h1>
      <h5>At Amazing Space, there's always space for you.&trade;</h5>
    </div>
  </header>
  <div class="main">
    <p class="page-description clearfix">
      Otherworldly views, uncompromising service, unparallelled luxury. This is Amazing Space, the world's first, and finest, space adventure company. With private and group voyages embarking weekly, you can book your tickets in advance or on the fly.
      <a class="learn-more" href="#">Learn More >></a>
    </p>
    <div class="gallery">
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space01.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space02.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space03.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space04.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space05.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space06.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space07.jpg">
      </figure>
      <figure class="gallery-item">
        <img class="thumbnail" src="https://s3.amazonaws.com/codecademy-content/projects/make-a-website/lesson-3/space08.jpg">
      </figure>
    </div>
  </div>
  <nav class="footer">
    <ul>
      <li>ABOUT</li>
      <li>MISSIONS</li>
      <li>ARCHIVE</li>
    </ul>
    <div class="contact-btn">
      <a>CONTACT US</a>
    </div>
  </nav>
</body>

</html>

------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------
MEDIA QUERIES
Range
Specific screen sizes can be targeted by setting multiple width and height media features. min-width and min-height are used to set the minimum width and minimum height, respectively. Conversely, max-width and max-height set the maximum width and maximum height, respectively.

By using multiple widths and heights, a range can be set for a media query.

@media only screen and (min-width: 320px) and (max-width: 480px) {
    /* ruleset for 320px - 480px */
}
The example above would apply its CSS rules only when the screen size is between 320 pixels and 480 pixels. Notice the use of a second and keyword after the min-width media feature. This allows us to chain two requirements together.

The example above can be written using two separate rules as well:

@media only screen and (min-width: 320px) { 
    /* ruleset for 320px - 479px */
}


@media only screen and (min-width: 480px) { 
    /* ruleset for > 480px */
}
The first media query in the example above will apply CSS rules when the size of the screen meets or exceeds 320 pixels. The second media query will apply CSS rules when the size of the screen meets or exceeds 480 pixels, meaning that it will override the CSS rules present in the first media query.

Both examples above are valid, and it is likely that you will see both patterns used when reading another developer's code.
1.
Let's make the gallery images appear larger when the screen size is small to medium size.

Write one @media query for screen sizes with a range between 320px and 480px. Use min-width and max-width to define the range.
2.
Inside the media query, select the thumbnails within the gallery with .gallery-item .thumbnail and give them a width of 95%.

You should notice that the gallery images appear wider when the screen size is between 320 and 480 pixels wide.
------------------------------------------------------------------------------------------------------------------------------
